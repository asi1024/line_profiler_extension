Timer unit: 1e-06 s

Total time: 201.3417 s
File: /home/isucon/go/src/github.com/isucon/isucon9-qualify/webapp/python/app.py
Function: get_transactions at line 461

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   461                                           @app.route("/users/transactions.json", methods=["GET"])
   462                                           @Profiler('/home/isucon/go/src/github.com/isucon/isucon9-qualify/profile')
   463                                           def get_transactions():
[36m   464        88     146888.0   1669.2      0.1  [m    user = get_user()
[36m   465        88       2098.0     23.8      0.0  [m    conn = dbh()
   466                                           
[36m   467        88        132.0      1.5      0.0  [m    item_id = 0
[36m   468        88        112.0      1.3      0.0  [m    created_at = 0
   469                                           
[36m   470        88       8325.0     94.6      0.0  [m    item_id_str = flask.request.args.get('item_id')
[36m   471        88        152.0      1.7      0.0  [m    if item_id_str:
[36m   472        38        115.0      3.0      0.0  [m        if not item_id_str.isdecimal() or int(item_id_str) < 0:
   473                                                       http_json_error(requests.codes['bad_request'], "item_id param error")
[36m   474        38        905.0     23.8      0.0  [m        item_id = int(item_id_str)
   475                                           
[36m   476        88       1423.0     16.2      0.0  [m    created_at_str = flask.request.args.get('created_at')
[36m   477        88        122.0      1.4      0.0  [m    if created_at_str:
[36m   478        38         78.0      2.1      0.0  [m        if not created_at_str.isdecimal() or int(created_at_str) < 0:
   479                                                       http_json_error(requests.codes['bad_request'], "created_at param error")
[36m   480        38         55.0      1.4      0.0  [m        created_at = int(created_at_str)
   481                                           
[36m   482        88        779.0      8.9      0.0  [m    with conn.cursor() as c:
   483                                           
[36m   484        88        118.0      1.3      0.0  [m        try:
   485                                           
[36m   486        88        266.0      3.0      0.0  [m            if item_id > 0 and created_at > 0:
[36m   487        38         53.0      1.4      0.0  [m                sql = "SELECT * FROM `items` WHERE (`seller_id` = %s OR `buyer_id` = %s) AND `status` IN (%s,%s,%s,%s,%s) AND (`created_at` < %s OR (`created_at` <= %s AND `id` < %s)) ORDER BY `created_at` DESC, `id` DESC LIMIT %s"
[36m   488        38         50.0      1.3      0.0  [m                c.execute(sql, (
[36m   489        38         69.0      1.8      0.0  [m                    user['id'],
[36m   490        38         46.0      1.2      0.0  [m                    user['id'],
[36m   491        38        100.0      2.6      0.0  [m                    Constants.ITEM_STATUS_ON_SALE,
[36m   492        38         64.0      1.7      0.0  [m                    Constants.ITEM_STATUS_TRADING,
[36m   493        38         60.0      1.6      0.0  [m                    Constants.ITEM_STATUS_SOLD_OUT,
[36m   494        38         56.0      1.5      0.0  [m                    Constants.ITEM_STATUS_CANCEL,
[36m   495        38         51.0      1.3      0.0  [m                    Constants.ITEM_STATUS_STOP,
[36m   496        38        258.0      6.8      0.0  [m                    datetime.datetime.fromtimestamp(created_at),
[36m   497        38         81.0      2.1      0.0  [m                    datetime.datetime.fromtimestamp(created_at),
[36m   498        38         43.0      1.1      0.0  [m                    item_id,
[36m   499        38    1389757.0  36572.6      0.7  [m                    Constants.TRANSACTIONS_PER_PAGE + 1,
   500                                                           ))
   501                                           
   502                                                       else:
[36m   503        50         77.0      1.5      0.0  [m                sql = "SELECT * FROM `items` WHERE (`seller_id` = %s OR `buyer_id` = %s ) AND `status` IN (%s,%s,%s,%s,%s) ORDER BY `created_at` DESC, `id` DESC LIMIT %s"
[36m   504        50        101.0      2.0      0.0  [m                c.execute(sql, [
[36m   505        50         93.0      1.9      0.0  [m                    user['id'],
[36m   506        50         71.0      1.4      0.0  [m                    user['id'],
[36m   507        50        173.0      3.5      0.0  [m                    Constants.ITEM_STATUS_ON_SALE,
[36m   508        50         81.0      1.6      0.0  [m                    Constants.ITEM_STATUS_TRADING,
[36m   509        50         94.0      1.9      0.0  [m                    Constants.ITEM_STATUS_SOLD_OUT,
[36m   510        50         90.0      1.8      0.0  [m                    Constants.ITEM_STATUS_CANCEL,
[36m   511        50         89.0      1.8      0.0  [m                    Constants.ITEM_STATUS_STOP,
[36m   512        50    2479642.0  49592.8      1.2  [m                    Constants.TRANSACTIONS_PER_PAGE + 1,
   513                                                           ])
   514                                           
[36m   515        88        271.0      3.1      0.0  [m            item_details = []
[36m   516        88        138.0      1.6      0.0  [m            while True:
[36m   517       950       4857.0      5.1      0.0  [m                item = c.fetchone()
   518                                           
[36m   519       950       1413.0      1.5      0.0  [m                if item is None:
[36m   520        85        796.0      9.4      0.0  [m                    break
   521                                           
[36m   522       865     379467.0    438.7      0.2  [m                seller = get_user_simple_by_id(item["seller_id"])
[36m   523       865     542173.0    626.8      0.3  [m                category = get_category_by_id(item["category_id"])
   524                                           
[36m   525       865       2778.0      3.2      0.0  [m                item["category"] = category
[36m   526       865       3772.0      4.4      0.0  [m                item["seller"] = to_user_json(seller)
[36m   527       865       4254.0      4.9      0.0  [m                item["image_url"] = get_image_url(item["image_name"])
[36m   528       865      26928.0     31.1      0.0  [m                item = to_item_json(item, simple=False)
   529                                           
[36m   530       865       1798.0      2.1      0.0  [m                item_details.append(item)
   531                                           
[36m   532       865       9230.0     10.7      0.0  [m                with conn.cursor() as c2:
[36m   533       865       1305.0      1.5      0.0  [m                    sql = "SELECT * FROM `transaction_evidences` WHERE `item_id` = %s"
[36m   534       865     343968.0    397.7      0.2  [m                    c2.execute(sql, [item['id']])
[36m   535       865       5260.0      6.1      0.0  [m                    transaction_evidence = c2.fetchone()
   536                                           
   537                                           
[36m   538       865       6651.0      7.7      0.0  [m                    if transaction_evidence:
[36m   539       358        526.0      1.5      0.0  [m                        sql = "SELECT * FROM `shippings` WHERE `transaction_evidence_id` = %s"
[36m   540       358     134365.0    375.3      0.1  [m                        c2.execute(sql, [transaction_evidence["id"]])
[36m   541       358       2603.0      7.3      0.0  [m                        shipping = c2.fetchone()
[36m   542       358        588.0      1.6      0.0  [m                        if not shipping:
   543                                                                       http_json_error(requests.codes['not_found'], "shipping not found")
   544                                           
[37;41;1m   545       358  195782070.0 546877.3     97.2  [m                        ssr = api_shipment_status(get_shipment_service_url(), {"reserve_id": shipping["reserve_id"]})
[36m   546       355       1601.0      4.5      0.0  [m                        item["transaction_evidence_id"] = transaction_evidence["id"]
[36m   547       355        680.0      1.9      0.0  [m                        item["transaction_evidence_status"] = transaction_evidence["status"]
[36m   548       355       9605.0     27.1      0.0  [m                        item["shipping_status"] = ssr["status"]
   549                                           
   550                                                   except MySQLdb.Error as err:
   551                                                       app.logger.exception(err)
   552                                                       http_json_error(requests.codes['internal_server_error'], "db error")
   553                                           
[36m   554        85        245.0      2.9      0.0  [m    has_next = False
[36m   555        85        230.0      2.7      0.0  [m    if len(item_details) > Constants.TRANSACTIONS_PER_PAGE:
[36m   556        65         89.0      1.4      0.0  [m        has_next = True
[36m   557        65        184.0      2.8      0.0  [m        item_details = item_details[:Constants.TRANSACTIONS_PER_PAGE]
   558                                           
[36m   559        85        199.0      2.3      0.0  [m    return flask.jsonify(dict(
[36m   560        85        120.0      1.4      0.0  [m        items=item_details,
[36m   561        85      40667.0    478.4      0.0  [m        has_next=has_next,
   562                                               ))
